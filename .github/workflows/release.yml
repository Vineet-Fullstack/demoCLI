name: Publish

on:
  release:
    types: [published]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build and Publish
        shell: bash
        run: |
          # Get the tag name (e.g., v1.1.0)
          tag=$(git describe --tags --abbrev=0)
          release_name="demoCLI-${tag}-${{ matrix.target }}"

          # Publish the project for the specific runtime
          dotnet publish src/demoCli/demoCli.csproj --framework net8.0 --runtime "${{ matrix.target }}" -c Release -o "$release_name" /p:PublishSingleFile=true /p:IncludeAllContentForSelfExtract=true

          # Create the release archive (zip for Windows, tar.gz for others)
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Clean up the published output
          rm -r "$release_name"

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            demoCLI-${tag}-win-x64.zip
            demoCLI-${tag}-linux-x64.tar.gz
            demoCLI-${tag}-osx-x64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
